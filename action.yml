name: "Python-lint-annotate: maintain code quality with annotated PRs and pushes"
description: "Zero-configuration GitHub Action to maintain code quality with push and PR annotations."
branding:
  icon: "alert-triangle"
  color: "yellow"
inputs:
  python-root-list:
    description: "A list of all paths to test"
    required: false
    default: "."
  use-pylint:
    description: "Use Pylint"
    required: false
    default: true
  use-pycodestyle:
    description: "Use pycodestyle"
    required: false
    default: true
  use-flake8:
    description: "Use Flake8"
    required: false
    default: true
  use-black:
    description: "Use Black"
    required: false
    default: true
  use-mypy:
    description: "Use mypy"
    required: false
    default: true
  use-isort:
    description: "Use isort"
    required: false
    default: true
  use-vulture:
    description: "Use vulture"
    required: false
    default: true
  use-pydocstyle:
    description: "Use pydocstyle"
    required: false
    default: true
  extra-pylint-options:
    description: "Extra options: pylint $(extra-pylint-options) $(python-root-list)"
    required: false
    default: ""
  extra-pycodestyle-options:
    description: "Extra options: pycodestyle $(extra-pycodestyle-options) $(python-root-list)"
    required: false
    default: ""
  extra-flake8-options:
    description: "Extra options: flake8 $(extra-flake8-options) $(python-root-list)"
    required: false
    default: ""
  extra-black-options:
    description: "Extra options: black --check $(extra-black-options) $(python-root-list)"
    required: false
    default: ""
  extra-mypy-options:
    description: "Extra options: mypy $(extra-mypy-options) $(python-root-list)"
    required: false
    default: ""
  extra-isort-options:
    description: "Extra options: isort -rc $(extra-isort-options) $(python-root-list) -c --diff "
    required: false
    default: ""
  extra-vulture-options:
    description: "Extra options: vulture $(extra-vulture-options) $(python-root-list)"
    required: false
    default: ""
  extra-pydocstyle-options:
    description: "Extra options: pydocstyle $(extra-pydocstyle-options) $(python-root-list)"
    required: false
    default: ""
  python-version:
    description: "Set desired python version with this keyword"
    required: false
    default: "3.8"

outputs:
  command_output:
    description: "The output value"
    value: ${{ steps.lint_linux.outputs.command_output }}


runs:
  using: "composite"
  steps:
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}
        architecture: x64
        cache: pip

    - name: Windows install dependencies
      if: ${{ runner.os == 'Windows' }}
      run:  |
        pip install -r requirements.txt  # project's dependencies
        pip install -r ${{ github.action_path }}\requirements.txt  # linters
        echo "path_sep=" >> $GITHUB_ENV
      shell: pwsh

    - name: Posix install dependencies
      if: ${{ runner.os != 'Windows' }}
      run:  |
        pip install -r requirements.txt  # project's dependencies
        pip install -r ${{ github.action_path }}/requirements.txt  # linters
      shell: bash

    - name: Lint on Windows
      if: ${{ runner.os == 'Windows' }}
      run: >
        result=$( \
        ${{ github.action_path }}\entrypoint.sh \
        '${{ inputs.python-root-list }}' \
        ${{ inputs.use-pylint }} \
        ${{ inputs.use-pycodestyle }} \
        ${{ inputs.use-flake8 }} \
        ${{ inputs.use-black }} \
        ${{ inputs.use-mypy }} \
        ${{ inputs.use-isort }} \
        ${{ inputs.use-vulture }} \
        ${{ inputs.use-pydocstyle }} \
        '${{ inputs.extra-pylint-options }}' \
        '${{ inputs.extra-pycodestyle-options }}' \
        '${{ inputs.extra-flake8-options }}' \
        '${{ inputs.extra-black-options }}' \
        '${{ inputs.extra-mypy-options }}' \
        '${{ inputs.extra-isort-options }}' \
        '${{ inputs.extra-vulture-options }}' \
        '${{ inputs.extra-pydocstyle-options }}' \
        )
        echo $result

        echo "command_output=$(echo "$result" | base64)" >> $GITHUB_OUTPUT
      shell: pwsh

    - name: Lint on Linux
      id: linter_linux
      if: ${{ runner.os == 'Linux' }}
      run: |
        result=$( \
        ${{ github.action_path }}/entrypoint.sh \
        '${{ inputs.python-root-list }}' \
        ${{ inputs.use-pylint }} \
        ${{ inputs.use-pycodestyle }} \
        ${{ inputs.use-flake8 }} \
        ${{ inputs.use-black }} \
        ${{ inputs.use-mypy }} \
        ${{ inputs.use-isort }} \
        ${{ inputs.use-vulture }} \
        ${{ inputs.use-pydocstyle }} \
        '${{ inputs.extra-pylint-options }}' \
        '${{ inputs.extra-pycodestyle-options }}' \
        '${{ inputs.extra-flake8-options }}' \
        '${{ inputs.extra-black-options }}' \
        '${{ inputs.extra-mypy-options }}' \
        '${{ inputs.extra-isort-options }}' \
        '${{ inputs.extra-vulture-options }}' \
        '${{ inputs.extra-pydocstyle-options }}' \
        )
        echo $result

        echo "command_output=$(echo "$result" | base64 -w0)" >> $GITHUB_OUTPUT
      shell: bash
